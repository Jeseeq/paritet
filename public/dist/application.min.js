"use strict";var ApplicationConfiguration=function(){var applicationModuleName="mean",applicationModuleVendorDependencies=["ngResource","ngAnimate","ngMessages","ui.router","ui.bootstrap","ui.utils","angularFileUpload","ui.bootstrap.tpls","formly","formlyBootstrap","ui.mask","ui.select","ngSanitize","ngFileSaver","angular-nicescroll"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider","$httpProvider",function($locationProvider,$httpProvider){$locationProvider.html5Mode(!0).hashPrefix("!"),$httpProvider.interceptors.push("authInterceptor")}]),angular.module(ApplicationConfiguration.applicationModuleName).run(["$rootScope","$state","Authentication",function($rootScope,$state,Authentication){function storePreviousState(state,params){state.data&&state.data.ignoreState||($state.previous={state:state,params:params,href:$state.href(state,params)})}$rootScope.$on("$stateChangeStart",function(event,toState,toParams,fromState,fromParams){if(toState.data&&toState.data.roles&&toState.data.roles.length>0){var allowed=!1;toState.data.roles.forEach(function(role){return void 0!==Authentication.user.roles&&-1!==Authentication.user.roles.indexOf(role)?(allowed=!0,!0):void 0}),allowed||(event.preventDefault(),void 0!==Authentication.user&&"object"==typeof Authentication.user?$state.go("forbidden"):$state.go("authentication.signin").then(function(){storePreviousState(toState,toParams)}))}}),$rootScope.$on("$stateChangeSuccess",function(event,toState,toParams,fromState,fromParams){storePreviousState(fromState,fromParams)})}]),angular.element(document).ready(function(){if(window.location.hash&&"#_=_"===window.location.hash)if(window.history&&history.pushState)window.history.pushState("",document.title,window.location.pathname);else{var scroll={top:document.body.scrollTop,left:document.body.scrollLeft};window.location.hash="",document.body.scrollTop=scroll.top,document.body.scrollLeft=scroll.left}angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("articles"),ApplicationConfiguration.registerModule("chat"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("core.admin",["core"]),ApplicationConfiguration.registerModule("core.admin.routes",["ui.router"]),ApplicationConfiguration.registerModule("createdoc"),ApplicationConfiguration.registerModule("support"),ApplicationConfiguration.registerModule("users",["core"]),ApplicationConfiguration.registerModule("users.admin",["core.admin"]),ApplicationConfiguration.registerModule("users.admin.routes",["core.admin.routes"]),angular.module("articles").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Articles",state:"articles",type:"dropdown",roles:["*"]}),Menus.addSubMenuItem("topbar","articles",{title:"List Articles",state:"articles.list"}),Menus.addSubMenuItem("topbar","articles",{title:"Create Articles",state:"articles.create",roles:["user"]})}]),angular.module("articles").config(["$stateProvider",function($stateProvider){$stateProvider.state("articles",{"abstract":!0,url:"/articles",template:"<ui-view/>"}).state("articles.list",{url:"",templateUrl:"modules/articles/client/views/list-articles.client.view.html"}).state("articles.create",{url:"/create",templateUrl:"modules/articles/client/views/create-article.client.view.html",data:{roles:["user","admin"]}}).state("articles.view",{url:"/:articleId",templateUrl:"modules/articles/client/views/view-article.client.view.html"}).state("articles.edit",{url:"/:articleId/edit",templateUrl:"modules/articles/client/views/edit-article.client.view.html",data:{roles:["user","admin"]}})}]),angular.module("articles").controller("ArticlesController",["$scope","$stateParams","$location","Authentication","Articles",function($scope,$stateParams,$location,Authentication,Articles){$scope.authentication=Authentication,$scope.create=function(isValid){if($scope.error=null,!isValid)return $scope.$broadcast("show-errors-check-validity","articleForm"),!1;var article=new Articles({title:this.title,content:this.content});article.$save(function(response){$location.path("articles/"+response._id),$scope.title="",$scope.content=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(article){if(article){article.$remove();for(var i in $scope.articles)$scope.articles[i]===article&&$scope.articles.splice(i,1)}else $scope.article.$remove(function(){$location.path("articles")})},$scope.update=function(isValid){if($scope.error=null,!isValid)return $scope.$broadcast("show-errors-check-validity","articleForm"),!1;var article=$scope.article;article.$update(function(){$location.path("articles/"+article._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.articles=Articles.query()},$scope.findOne=function(){$scope.article=Articles.get({articleId:$stateParams.articleId})}}]),angular.module("articles").factory("Articles",["$resource",function($resource){return $resource("api/articles/:articleId",{articleId:"@_id"},{update:{method:"PUT"}})}]),angular.module("chat").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Chat",state:"chat"})}]),angular.module("chat").config(["$stateProvider",function($stateProvider){$stateProvider.state("chat",{url:"/chat",templateUrl:"modules/chat/client/views/chat.client.view.html",data:{roles:["user","admin"]}})}]),angular.module("chat").controller("ChatController",["$scope","$location","Authentication","Socket",function($scope,$location,Authentication,Socket){$scope.messages=[],Authentication.user||$location.path("/"),Socket.socket||Socket.connect(),Socket.on("chatMessage",function(message){$scope.messages.unshift(message)}),$scope.sendMessage=function(){var message={text:this.messageText};Socket.emit("chatMessage",message),this.messageText=""},$scope.$on("$destroy",function(){Socket.removeListener("chatMessage")})}]),angular.module("core.admin").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Admin",state:"admin",type:"dropdown",roles:["admin"]})}]),angular.module("core.admin.routes").config(["$stateProvider",function($stateProvider){$stateProvider.state("admin",{"abstract":!0,url:"/admin",template:"<ui-view/>",data:{roles:["admin"]}})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise(function($injector,$location){$injector.get("$state").transitionTo("not-found",null,{location:!1})}),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/client/views/home.client.view.html"}).state("not-found",{url:"/not-found",templateUrl:"modules/core/client/views/404.client.view.html",data:{ignoreState:!0}}).state("bad-request",{url:"/bad-request",templateUrl:"modules/core/client/views/400.client.view.html",data:{ignoreState:!0}}).state("forbidden",{url:"/forbidden",templateUrl:"modules/core/client/views/403.client.view.html",data:{ignoreState:!0}})}]),angular.module("core").controller("HeaderController",["$scope","$state","Authentication","Menus",function($scope,$state,Authentication,Menus){$scope.$state=$state,$scope.authentication=Authentication,$scope.menu=Menus.getMenu("topbar"),$scope.isCollapsed=!1,$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication,$scope.myInterval=8e3,$scope.noWrapSlides=!1,$scope.slides=[{image:"unify/img/kitten/1.jpg",text:"test"},{image:"unify/img/kitten/2.jpg",text:"test"},{image:"unify/img/kitten/3.jpg",text:"test"}]}]),angular.module("core").directive("mAppLoading",["$animate",function($animate){function link(scope,element,attributes){$animate.leave(element.children().eq(1)).then(function(){element.remove(),scope=element=attributes=null})}return{link:link,restrict:"C"}}]),angular.module("core").directive("showErrors",["$timeout","$interpolate",function($timeout,$interpolate){var linkFn=function(scope,el,attrs,formCtrl){var inputEl,inputName,inputNgEl,options,showSuccess,toggleClasses,initCheck=!1,showValidationMessages=!1;if(options=scope.$eval(attrs.showErrors)||{},showSuccess=options.showSuccess||!1,inputEl=el[0].querySelector(".form-control[name]")||el[0].querySelector("[name]"),inputNgEl=angular.element(inputEl),inputName=$interpolate(inputNgEl.attr("name")||"")(scope),!inputName)throw"show-errors element has no child input elements with a 'name' attribute class";var reset=function(){return $timeout(function(){el.removeClass("has-error"),el.removeClass("has-success"),showValidationMessages=!1},0,!1)};scope.$watch(function(){return formCtrl[inputName]&&formCtrl[inputName].$invalid},function(invalid){return toggleClasses(invalid)}),scope.$on("show-errors-check-validity",function(event,name){return angular.isUndefined(name)||formCtrl.$name===name?(initCheck=!0,showValidationMessages=!0,toggleClasses(formCtrl[inputName].$invalid)):void 0}),scope.$on("show-errors-reset",function(event,name){return angular.isUndefined(name)||formCtrl.$name===name?reset():void 0}),toggleClasses=function(invalid){return el.toggleClass("has-error",showValidationMessages&&invalid),showSuccess?el.toggleClass("has-success",showValidationMessages&&!invalid):void 0}};return{restrict:"A",require:"^form",compile:function(elem,attrs){if(-1===attrs.showErrors.indexOf("skipFormGroupCheck")&&!elem.hasClass("form-group")&&!elem.hasClass("input-group"))throw"show-errors element does not have the 'form-group' or 'input-group' class";return linkFn}}}]),angular.module("core").factory("authInterceptor",["$q","$injector",function($q,$injector){return{responseError:function(rejection){if(!rejection.config.ignoreAuthModule)switch(rejection.status){case 401:$injector.get("$state").transitionTo("authentication.signin");break;case 403:$injector.get("$state").transitionTo("forbidden")}return $q.reject(rejection)}}}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["user","admin"],this.menus={};var shouldRender=function(user){if(~this.roles.indexOf("*"))return!0;if(!user)return!1;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exist")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,options){return options=options||{},this.menus[menuId]={roles:options.roles||this.defaultRoles,items:options.items||[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,options){if(options=options||{},this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:options.title||"",state:options.state||"",type:options.type||"item","class":options["class"],roles:null===options.roles||"undefined"==typeof options.roles?this.defaultRoles:options.roles,position:options.position||0,items:[],shouldRender:shouldRender}),options.items)for(var i in options.items)this.addSubMenuItem(menuId,options.state,options.items[i]);return this.menus[menuId]},this.addSubMenuItem=function(menuId,parentItemState,options){options=options||{},this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].state===parentItemState&&this.menus[menuId].items[itemIndex].items.push({title:options.title||"",state:options.state||"",roles:null===options.roles||"undefined"==typeof options.roles?this.menus[menuId].items[itemIndex].roles:options.roles,position:options.position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemState){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].state===menuItemState&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemState){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].state===submenuItemState&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar",{roles:["*"]})}]),angular.module("core").service("Socket",["Authentication","$state","$timeout",function(Authentication,$state,$timeout){this.connect=function(){Authentication.user&&(this.socket=io())},this.connect(),this.on=function(eventName,callback){this.socket&&this.socket.on(eventName,function(data){$timeout(function(){callback(data)})})},this.emit=function(eventName,data){this.socket&&this.socket.emit(eventName,data)},this.removeListener=function(eventName){this.socket&&this.socket.removeListener(eventName)}}]),angular.module("createdoc").run(["formlyConfig",function(formlyConfig){formlyConfig.setType({name:"maskedInput",template:['<label for="{{::id}}" class="col col-4 control-label">','{{to.label}} {{to.required ? "*" : ""}}',"</label>",'<div class=" col col-8 input">','<input class="input" ng-model="model[options.key]" />',"</div>"].join(" "),defaultOptions:{ngModelAttrs:{mask:{attribute:"ui-mask"},maskPlaceholder:{attribute:"ui-mask-placeholder"}},templateOptions:{maskPlaceholder:""}}}),formlyConfig.extras.removeChromeAutoComplete=!0,formlyConfig.setType({name:"async-ui-select","extends":"select",templateUrl:"async-ui-select-type.html"})}]),angular.module("createdoc",["formly","formlyBootstrap"],["formlyConfigProvider",function(formlyConfigProvider){formlyConfigProvider.setWrapper({name:"horizontalBootstrapLabel",template:['<label for="{{::id}}" class="col col-4 control-label">','{{to.label}} {{to.required ? "*" : ""}}',"</label>",'<div class=" col col-8 input">',"<formly-transclude></formly-transclude>","</div>"].join(" ")}),formlyConfigProvider.setWrapper({name:"horizontalBootstrapCheckbox",template:['<div class="col-sm-offset-2 col-sm-8">',"<formly-transclude></formly-transclude>","</div>"].join(" ")}),formlyConfigProvider.setType({name:"horizontalInput","extends":"input",wrapper:["horizontalBootstrapLabel","bootstrapHasError"]}),formlyConfigProvider.setType({name:"horizontalInputIcon",wrapper:["horizontalBootstrapLabel","bootstrapHasError"],template:['<div class = "row">','<div class="col col-10 input">','<input  class="input form-control" ng-model="model[options.key]">',"</div>",'<div class="col col-1">','<i class=" icon-custom icon-sm-tabs icon-bg-blue fa fa-info"  uib-popover-template = {{options.templateOptions.PopOverTemplate}} popover-placement="right" popover-trigger="click">',"</i>","</div>","</div>"].join(" ")}),formlyConfigProvider.setType({name:"horizontalTypeaheadInputIcon",wrapper:["horizontalBootstrapLabel","bootstrapHasError"],template:['<div class = "row">','<div class="col col-10 input">','<input type="text" ng-model="model[options.key]" typeahead-on-select="onSelect($item, $model, $label)"typeahead="item.name for item in to.options | filter:$viewValue | limitTo:8" class="form-control">',"</div>",'<div class="col col-1">','<i class=" icon-custom icon-sm-tabs icon-bg-blue fa fa-info"  uib-popover-template = {{options.templateOptions.PopOverTemplate}} popover-is-open = "popoverflag" popover-placement="right" popover-trigger="click">',"</i>","</div>","</div>"].join(" ")}),formlyConfigProvider.setType({name:"horizontalMaskedInput","extends":"input",template:'<input class="form-control" ng-model="model[options.key]"/>',defaultOptions:{ngModelAttrs:{mask:{attribute:"ui-mask"},maskPlaceholder:{attribute:"ui-mask-placeholder"}},templateOptions:{maskPlaceholder:""}},wrapper:["horizontalBootstrapLabel","bootstrapHasError"]}),formlyConfigProvider.setType({name:"ZipInput","extends":"input",template:'<input class="form-control input" ng-model="model[options.key]"/>',defaultOptions:{ngModelAttrs:{mask:{attribute:"ui-mask"},maskPlaceholder:{attribute:"ui-mask-placeholder"}},templateOptions:{maskPlaceholder:""}}}),formlyConfigProvider.setType({name:"horizontalCheckbox","extends":"checkbox",wrapper:["horizontalBootstrapCheckbox","bootstrapHasError"]}),formlyConfigProvider.extras.removeChromeAutoComplete=!0,formlyConfigProvider.setType({name:"async-ui-select","extends":"select",templateUrl:"async-ui-select-type.html",wrapper:["horizontalBootstrapLabel","bootstrapHasError"]}),formlyConfigProvider.setType({name:"typeahead",template:'<input type="text" ng-model="model[options.key]" typeahead="item for item in to.options | filter:$viewValue | limitTo:8" class="form-control">',wrapper:["bootstrapLabel","bootstrapHasError"]})}]),angular.module("createdoc").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Создать документ",state:"createdoc",type:"item",position:"0",roles:["*"]})}]),angular.module("createdoc").config(["$stateProvider",function($stateProvider){$stateProvider.state("createdoc",{url:"/createdoc",templateUrl:"modules/createdoc/client/views/createdoc.client.view.html",data:{roles:["user","admin"]},controller:"CategoryController",resolve:{categoryData:["Category",function(Category){return Category.query()}]}}),$stateProvider.state("document",{url:"/document/{documentId}",templateUrl:function($stateParams){return"modules/createdoc/client/views/createdoc."+$stateParams.documentId+".client.view.html"},data:{roles:["user","admin"]},controller:"CreatedocController",resolve:{documentData:["$stateParams","Document",function($stateParams,Document){return Document.get({documentId:$stateParams.documentId})}]}})}]),angular.module("createdoc").controller("ModalQuestionOne",["$scope","$stateParams","$location","Authentication","documentData","$log","$uibModal",function($scope,$stateParams,$location,Authentication,documentData,$log,$uibModal,$q,$http){$scope.data=documentData,$scope.authentication=Authentication,$scope.person={first_name:Authentication.user.firstName||"",last_name:Authentication.user.lastName||""}}]),angular.module("createdoc").controller("CategoryController",["$scope","$stateParams","Authentication","categoryData",function($scope,$stateParams,Authentication,categoryData){$scope.categories=categoryData}]),angular.module("createdoc").controller("CreatedocController",["$scope","$stateParams","$http","$location","Authentication","documentData","$log","$uibModal","$timeout","FileSaver","Blob",function($scope,$stateParams,$http,$location,Authentication,documentData,$log,$uibModal,$timeout,FileSaver,Blob){$scope.documentId=$stateParams.documentId,$scope.place={},$scope.data=documentData,$scope.authentication=Authentication,$scope.person={first_name:Authentication.user.firstName||"",last_name:Authentication.user.lastName||""};var timeoutPromise,endpoint="/api/documentpreview/"+$scope.documentId,delayInMs=1e3;$scope.$watchCollection("person",function(){$timeout.cancel(timeoutPromise),timeoutPromise=$timeout(function(){$http.post(endpoint,$scope.person).then(function(response){$scope.documentPreview=response.data})},delayInMs)}),$http.post(endpoint,$scope.person).then(function(response){$scope.documentPreview=response.data}),$scope.isOpen=!0,$scope.openModal=function(){var modalInstance=$uibModal.open({animation:!0,templateUrl:"myModalContent.html",controller:function($http,$scope,$uibModalInstance,data,person,Company,Authentication){$scope.personType=function(){return"1"===data.questions[0].selected?"юридичну особу":"2"===data.questions[0].selected?"фізичну особу - підприємця":"3"===data.questions[0].selected?"фізичну особу":void 0},$scope.create=function(){var company=new Company({user:Authentication.user,name:person.name,city:person.city,department:person.department,region:person.region,street:person.street,house:person.house,block:person.block,apartment:person.apartment,zip:person.zip,phone:person.phone,email:person.email,code_edrp:person.code_edrp});company.$save(function(response){},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.close=function(){$scope.create(),$uibModalInstance.dismiss("cancel")},$scope.cancelAndReset=function(){vm.options.resetModel(),$uibModalInstance.dismiss("cancel")};var vm=this;vm.person=person,vm.data=data,vm.YurPersonFields=[{key:"last_name",type:"horizontalInput",templateOptions:{type:"text",label:"Прізвище",placeholder:"Введіть прізвище",required:!0},hideExpression:function(){return"1"===vm.data.questions[0].selected}},{key:"first_name",type:"horizontalInput",templateOptions:{type:"text",label:"Ім`я",placeholder:"Введіть ім`я",required:!0},hideExpression:function(){return"1"===vm.data.questions[0].selected}},{key:"second_name",type:"horizontalInput",templateOptions:{type:"text",label:"По-батькові",placeholder:"",required:!0},hideExpression:function(){return"1"===vm.data.questions[0].selected}},{key:"name",type:"horizontalTypeaheadInputIcon",templateOptions:{label:"Найменування відповідача",placeholder:"Найменування відповідача",required:!0,options:[],PopOverTemplate:"'modules/createdoc/client/views/popoverTemplate.html'"},hideExpression:function(){return"2"===vm.data.questions[0].selected||"3"===vm.data.questions[0].selected},controller:["$scope",function($scope){$scope.close=function(){$scope.popoverflag=!1},$scope.onSelect=function($item,$model,$label){$scope.model.apartment=$item.apartment,$scope.model.block=$item.block,$scope.model.city=$item.city,$scope.model.department=$item.department,$scope.model.street=$item.street,$scope.model.email=$item.email,$scope.model.house=$item.house,$scope.model.name=$item.name,$scope.model.phone=$item.phone,$scope.model.region=$item.region,$scope.model.zip=$item.zip,$scope.model.code_edrp=$item.code_edrp};var promise,endpoint="/api/company";return promise=$http.get(endpoint),promise.then(function(response){$scope.to.options=response.data})}]},{key:"code_edrp",type:"horizontalMaskedInput",templateOptions:{label:"Код ЄДРПОУ",placeholder:"Введіть код ЄДРПОУ Відповідача (8 цифр)",required:!0,mask:"99999999"},hideExpression:function(){return"2"===vm.data.questions[0].selected||"3"===vm.data.questions[0].selected}},{className:"section-label",template:"<hr class='devider devider-db'/>"},{className:"section-label2",template:"<div class='heading'>Адреса Відповідача</div>"},{className:"row padding-1px",fieldGroup:[{className:"input col col-4",type:"input",key:"city",templateOptions:{label:"Місто",placeholder:"Місто",required:!0}},{className:"select col col-4",type:"select",key:"department",templateOptions:{label:"Область",valueProp:"value",labelProp:"name",placeholder:"Область",options:[{name:"Вінницька",value:"Вінницька"},{name:"Волинська",value:"Волинська"},{name:"Дніпропетровська",value:"Дніпропетровська"},{name:"Донецька",value:"Донецька"},{name:"Житомирська",value:"Житомирська"},{name:"Закарпатська",value:"Закарпатська"},{name:"Запорізька",value:"Запорізька"},{name:"Івано-Франківська",value:"Івано-Франківська"},{name:"Київська",value:"Київська"},{name:"Кіровоградська",value:"Кіровоградська"},{name:"Луганська",value:"Луганська"},{name:"Львівська",value:"Львівська"},{name:"Миколаївська",value:"Миколаївська"},{name:"Одеська",value:"Одеська"},{name:"Полтавська",value:"Полтавська"},{name:"Рівненська",value:"Рівненська"},{name:"Сумська",value:"Сумська"},{name:"Тернопільська",value:"Тернопільська"},{name:"Харківська",value:"Харківська"},{name:"Херсонська",value:"Херсонська"},{name:"Хмельницька",value:"Хмельницька"},{name:"Черкаська",value:"Черкаська"},{name:"Чернівецька",value:"Чернівецька"},{name:"Чернігівська",value:"Чернігівська"}]},expressionProperties:{"templateOptions.disabled":"model.city == 'Київ'"}},{className:"input col col-4",type:"input",key:"region",templateOptions:{label:"Район",placeholder:"Район"}},{className:"input col col-6",type:"input",key:"street",templateOptions:{placeholder:"Вулиця",required:!0}},{className:"input col col-2",type:"input",key:"house",templateOptions:{placeholder:"№ буд"}},{className:"input col col-2",type:"input",key:"block",templateOptions:{placeholder:"Корпус"}},{className:"input col col-2",type:"input",key:"apartment",templateOptions:{placeholder:"Квартира"}},{className:"input col col-2 col-xs-offset-10",type:"ZipInput",key:"zip",templateOptions:{label:"Індекс",mask:"99999"}}]},{template:"<hr class='devider devider-db' />"},{key:"IPN",type:"horizontalInput",templateOptions:{type:"text",label:"ІПН відповідача",placeholder:"ІПН відповідача",required:!0},hideExpression:function(){return"1"===vm.data.questions[0].selected}},{key:"phone",type:"horizontalMaskedInput",templateOptions:{label:"Телефон",mask:"(999) 999-99-99"}},{type:"horizontalInput",key:"email",templateOptions:{label:"Email",placeholder:"example@gmail.com",type:"email",maxlength:20,minlength:6}}]},controllerAs:"vm",size:"md",backdrop:"static",resolve:{data:function(){return $scope.data},person:function(){return $scope.person}}});modalInstance.result.then(function(){$log.info("Modal dismissed at: "+new Date)})},$scope.downloadPdf=function(){$http.post("/api/convertFilePdf",[$scope.documentPreview,$scope.person,$scope.data],{responseType:"arraybuffer"}).then(function(response){var data=new Blob([response.data],{type:"application/pdf"});FileSaver.saveAs(data,$scope.data.title+".pdf")})},$scope.downloadDoc=function(){$http.post("/api/convertFileDoc",[$scope.documentPreview,$scope.person,$scope.data],{responseType:"arraybuffer"}).then(function(response){var data=new Blob([response.data],{type:"application/vnd.openxmlformats-officedocument.wordprocessingml.document"});FileSaver.saveAs(data,$scope.data.title+".docx")})}}]),angular.module("createdoc").factory("Category",["$resource",function($resource){return $resource("api/category/:categoryId",{categoryId:"@_id"},{update:{method:"PUT"}})}]),angular.module("createdoc").factory("Document",["$resource",function($resource){return $resource("api/document/:documentId",{documentId:"@_id"},{update:{method:"PUT"}})}]),angular.module("createdoc").factory("Company",["$resource",function($resource){return $resource("api/company",{update:{method:"PUT"}})}]),angular.module("support").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Поддержка",state:"support",type:"item"})}]),angular.module("support").config(["$stateProvider",function($stateProvider){$stateProvider.state("support",{url:"/support",templateUrl:"modules/support/client/views/support.client.view.html",data:{roles:["user","admin"]}})}]),angular.module("support").controller("SupportController",["$scope",function($scope){$scope.hello="Jony"}]),angular.module("users.admin").run(["Menus",function(Menus){Menus.addSubMenuItem("topbar","admin",{title:"Manage Users",state:"admin.users"})}]),angular.module("users.admin.routes").config(["$stateProvider",function($stateProvider){$stateProvider.state("admin.users",{url:"/users",templateUrl:"modules/users/client/views/admin/list-users.client.view.html",controller:"UserListController"}).state("admin.user",{url:"/users/:userId",templateUrl:"modules/users/client/views/admin/view-user.client.view.html",controller:"UserController",resolve:{userResolve:["$stateParams","Admin",function($stateParams,Admin){return Admin.get({userId:$stateParams.userId})}]}}).state("admin.user-edit",{url:"/users/:userId/edit",templateUrl:"modules/users/client/views/admin/edit-user.client.view.html",controller:"UserController",resolve:{userResolve:["$stateParams","Admin",function($stateParams,Admin){return Admin.get({userId:$stateParams.userId})}]}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("settings",{"abstract":!0,url:"/settings",templateUrl:"modules/users/client/views/settings/settings.client.view.html",data:{roles:["user","admin"]}}).state("settings.profile",{url:"/profile",templateUrl:"modules/users/client/views/settings/edit-profile.client.view.html"}).state("settings.password",{url:"/password",templateUrl:"modules/users/client/views/settings/change-password.client.view.html"}).state("settings.accounts",{url:"/accounts",templateUrl:"modules/users/client/views/settings/manage-social-accounts.client.view.html"}).state("settings.picture",{url:"/picture",templateUrl:"modules/users/client/views/settings/change-profile-picture.client.view.html"}).state("authentication",{"abstract":!0,url:"/authentication",templateUrl:"modules/users/client/views/authentication/authentication.client.view.html"}).state("authentication.signup",{url:"/signup",templateUrl:"modules/users/client/views/authentication/signup.client.view.html"}).state("authentication.signin",{url:"/signin?err",templateUrl:"modules/users/client/views/authentication/signin.client.view.html"}).state("password",{"abstract":!0,url:"/password",template:"<ui-view/>"}).state("password.forgot",{url:"/forgot",templateUrl:"modules/users/client/views/password/forgot-password.client.view.html"}).state("password.reset",{"abstract":!0,url:"/reset",template:"<ui-view/>"}).state("password.reset.invalid",{url:"/invalid",templateUrl:"modules/users/client/views/password/reset-password-invalid.client.view.html"}).state("password.reset.success",{url:"/success",templateUrl:"modules/users/client/views/password/reset-password-success.client.view.html"}).state("password.reset.form",{url:"/:token",templateUrl:"modules/users/client/views/password/reset-password.client.view.html"})}]),angular.module("users.admin").controller("UserListController",["$scope","$filter","Admin",function($scope,$filter,Admin){Admin.query(function(data){$scope.users=data,$scope.buildPager()}),$scope.buildPager=function(){$scope.pagedItems=[],$scope.itemsPerPage=15,$scope.currentPage=1,$scope.figureOutItemsToDisplay()},$scope.figureOutItemsToDisplay=function(){$scope.filteredItems=$filter("filter")($scope.users,{$:$scope.search}),$scope.filterLength=$scope.filteredItems.length;var begin=($scope.currentPage-1)*$scope.itemsPerPage,end=begin+$scope.itemsPerPage;$scope.pagedItems=$scope.filteredItems.slice(begin,end)},$scope.pageChanged=function(){$scope.figureOutItemsToDisplay()}}]),angular.module("users.admin").controller("UserController",["$scope","$state","Authentication","userResolve",function($scope,$state,Authentication,userResolve){$scope.authentication=Authentication,$scope.user=userResolve,$scope.remove=function(user){confirm("Are you sure you want to delete this user?")&&(user?(user.$remove(),$scope.users.splice($scope.users.indexOf(user),1)):$scope.user.$remove(function(){$state.go("admin.users")}))},$scope.update=function(isValid){if(!isValid)return $scope.$broadcast("show-errors-check-validity","userForm"),!1;var user=$scope.user;user.$update(function(){$state.go("admin.user",{userId:user._id})},function(errorResponse){$scope.error=errorResponse.data.message})}}]),angular.module("users").controller("AuthenticationController",["$scope","$state","$http","$location","$window","Authentication","PasswordValidator","$uibModal",function($scope,$state,$http,$location,$window,Authentication,PasswordValidator,$uibModal){$scope.authentication=Authentication,
$scope.popoverMsg=PasswordValidator.getPopoverMsg(),$scope.passwordConfig=function(){var config={allowPassphrases:!1,maxLength:128,minLength:6,minPhraseLength:20,minOptionalTestsToPass:5};PasswordValidator.configPassword(config)},$scope.error=$location.search().err,$scope.authentication.user&&$location.path("/"),$scope.signup=function(isValid){return $scope.error=null,isValid?void $http.post("/api/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$state.go($state.previous.state.name||"home",$state.previous.params)}).error(function(response){$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","userForm"),!1)},$scope.signin=function(isValid){return $scope.error=null,isValid?void $http.post("/api/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$state.go($state.previous.state.name||"home",$state.previous.params)}).error(function(response){$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","userForm"),!1)},$scope.callOauthProvider=function(url){$state.previous&&$state.previous.href&&(url+="?redirect_to="+encodeURIComponent($state.previous.href)),$window.location.href=url},$scope.openTerms=function(){$uibModal.open({animation:"true",templateUrl:"terms.html",controller:function($uibModalInstance,$scope){$scope.cancel=function(){$uibModalInstance.dismiss("cancel")}},size:"md"})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication","PasswordValidator",function($scope,$stateParams,$http,$location,Authentication,PasswordValidator){$scope.authentication=Authentication,$scope.popoverMsg=PasswordValidator.getPopoverMsg(),$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(isValid){return $scope.success=$scope.error=null,isValid?void $http.post("/api/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","forgotPasswordForm"),!1)},$scope.resetUserPassword=function(isValid){return $scope.success=$scope.error=null,isValid?void $http.post("/api/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","resetPasswordForm"),!1)}}]),angular.module("users").controller("ChangePasswordController",["$scope","$http","Authentication","PasswordValidator",function($scope,$http,Authentication,PasswordValidator){$scope.user=Authentication.user,$scope.popoverMsg=PasswordValidator.getPopoverMsg(),$scope.changeUserPassword=function(isValid){return $scope.success=$scope.error=null,isValid?void $http.post("/api/users/password",$scope.passwordDetails).success(function(response){$scope.$broadcast("show-errors-reset","passwordForm"),$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","passwordForm"),!1)}}]),angular.module("users").controller("ChangeProfilePictureController",["$scope","$timeout","$window","Authentication","FileUploader",function($scope,$timeout,$window,Authentication,FileUploader){$scope.user=Authentication.user,$scope.imageURL=$scope.user.profileImageURL,$scope.uploader=new FileUploader({url:"api/users/picture",alias:"newProfilePicture"}),$scope.uploader.filters.push({name:"imageFilter",fn:function(item,options){var type="|"+item.type.slice(item.type.lastIndexOf("/")+1)+"|";return-1!=="|jpg|png|jpeg|bmp|gif|".indexOf(type)}}),$scope.uploader.onAfterAddingFile=function(fileItem){if($window.FileReader){var fileReader=new FileReader;fileReader.readAsDataURL(fileItem._file),fileReader.onload=function(fileReaderEvent){$timeout(function(){$scope.imageURL=fileReaderEvent.target.result},0)}}},$scope.uploader.onSuccessItem=function(fileItem,response,status,headers){$scope.success=!0,$scope.user=Authentication.user=response,$scope.cancelUpload()},$scope.uploader.onErrorItem=function(fileItem,response,status,headers){$scope.cancelUpload(),$scope.error=response.message},$scope.uploadProfilePicture=function(){$scope.success=$scope.error=null,$scope.uploader.uploadAll()},$scope.cancelUpload=function(){$scope.uploader.clearQueue(),$scope.imageURL=$scope.user.profileImageURL}}]),angular.module("users").controller("EditProfileController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.updateUserProfile=function(isValid){if($scope.success=$scope.error=null,!isValid)return $scope.$broadcast("show-errors-check-validity","userForm"),!1;var user=new Users($scope.user);user.$update(function(response){$scope.$broadcast("show-errors-reset","userForm"),$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}}]),angular.module("users").controller("SocialAccountsController",["$scope","$http","Authentication",function($scope,$http,Authentication){$scope.user=Authentication.user,$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/api/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","Authentication",function($scope,Authentication){$scope.user=Authentication.user}]),angular.module("users").directive("passwordValidator",["PasswordValidator",function(PasswordValidator){return{require:"ngModel",link:function(scope,element,attrs,ngModel){ngModel.$validators.requirements=function(password){var status=!0;if(password){var result=PasswordValidator.getResult(password),requirementsIdx=0,requirementsMeter=[{color:"danger",progress:"20"},{color:"warning",progress:"40"},{color:"info",progress:"60"},{color:"primary",progress:"80"},{color:"success",progress:"100"}];result.errors.length<requirementsMeter.length&&(requirementsIdx=requirementsMeter.length-result.errors.length-1),scope.requirementsColor=requirementsMeter[requirementsIdx].color,scope.requirementsProgress=requirementsMeter[requirementsIdx].progress,result.errors.length?(scope.popoverMsg=PasswordValidator.getPopoverMsg(),scope.passwordErrors=result.errors,status=!1):(scope.popoverMsg="",scope.passwordErrors=[],status=!0)}return status}}}}]),angular.module("users").directive("passwordVerify",[function(){return{require:"ngModel",scope:{passwordVerify:"="},link:function(scope,element,attrs,ngModel){scope.$watch(function(){var combined;return(scope.passwordVerify||ngModel)&&(combined=scope.passwordVerify+"_"+ngModel),combined},function(value){value&&(ngModel.$validators.passwordVerify=function(password){var origin=scope.passwordVerify;return origin!==password?!1:!0})})}}}]),angular.module("users").directive("lowercase",function(){return{require:"ngModel",link:function(scope,element,attrs,modelCtrl){modelCtrl.$parsers.push(function(input){return input?input.toLowerCase():""}),element.css("text-transform","lowercase")}}}),angular.module("users").factory("Authentication",["$window",function($window){var auth={user:$window.user};return auth}]),angular.module("users").factory("PasswordValidator",["$window",function($window){var owaspPasswordStrengthTest=$window.owaspPasswordStrengthTest;return{getResult:function(password){var result=owaspPasswordStrengthTest.test(password);return result},getPopoverMsg:function(){var popoverMsg="Пожалуйста введите пароль состоящий минимум из 6 символов и хотя бы 1 цифры";return popoverMsg},configPassword:function(config){return owaspPasswordStrengthTest.config(config),!0}}}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("api/users",{},{update:{method:"PUT"}})}]),angular.module("users.admin").factory("Admin",["$resource",function($resource){return $resource("api/users/:userId",{userId:"@_id"},{update:{method:"PUT"}})}]);